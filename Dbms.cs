using System;
using System.Collections.Generic;
using System.Text;

/* 
 * This class file contains default information related to specific DBMS.
 * When web-application responds to dummy request with error generated by DBMS,
 * those errors are tested against stored attributes to determine DBMS.
 * When constructing valid SQLi payloads, DBMS-specific errors help in knowing
 * how to resolve each.
 */

public class Dbms
{
	public string name;
	public string concatenate;
	public string databaseSchemaTable;
	public List<string> databaseSchemaTableDefinition;
	public List<string> errors;

	public Dbms()
	{
		this.name = "undefined";
		this.concatenate = "undefined";
		this.databaseSchemaTable = "undefined";
		this.databaseSchemaTableDefinition = new List<string>();
		this.errors = new List<string>();
	}

	public Dbms(string name)
	{
		switch (name)
		{
			case "sqlite":
				this.name = name;
				this.concatenate = "||";
				this.databaseSchemaTable = "sqlite_master";
				this.databaseSchemaTableDefinition = new List<string>();
				this.databaseSchemaTableDefinition.Add("type");
				this.databaseSchemaTableDefinition.Add("name");
				this.databaseSchemaTableDefinition.Add("tbl_name");
				this.databaseSchemaTableDefinition.Add("rootpage");
				this.databaseSchemaTableDefinition.Add("sql");
				this.errors = new List<string>();
				this.errors.Add("incomplete input");
				this.errors.Add("SELECTs to the left and right of UNION do not have the same number of result columns");
				break;
			//Extend by adding any other DBMS static information.
		}
	}

	public override string ToString()
	{
		return "Name: " + name +
			   "\nConcatenation operator: " + concatenate +
			   "\nDatabase schema table: " + databaseSchemaTable +
			   "\nDatabase schema table definition: " + (databaseSchemaTableDefinition.Count == 0 ? "" : string.Join(", ", databaseSchemaTableDefinition)) +
			   "\nErrors: " + (errors.Count == 0 ? "" : string.Join(", ", errors));
	}
}

